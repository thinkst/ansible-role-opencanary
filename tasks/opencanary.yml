---

- block:
    - name: Create download directory
      file:
        path: "{{ github_src_dir }}"
        state: directory
        mode: '0755'

    - name: Clone GitHub repo
      git:
        repo: https://github.com/thinkst/opencanary.git
        dest: "{{ github_src_dir }}"
        version: "{{ opencanary_version }}"

    - name: Build Git Release
      shell: 'python3 {{ github_src_dir }}/setup.py sdist'
      args:
        chdir: '{{ github_src_dir }}'

    - name: Get opencanary_tar location
      shell: 'ls {{ github_src_dir }}/dist'
      register: opencanary_tar_name

    - name: Install opencanary git
      pip:
        name: 'file://{{ github_src_dir }}/dist/{{ opencanary_tar_name.stdout }}'
        virtualenv: "{{ opencanary_install_dir }}"
        virtualenv_command: "/usr/bin/python3 -m venv"
  when: install_source == "github"

- name: Install opencanary
  pip:
    name: opencanary
    virtualenv: "{{ opencanary_install_dir }}"
    virtualenv_command: "/usr/bin/python3 -m venv"
    version: "{{ opencanary_version }}"
  when: install_source == "pypi"

- name: Install optional python dependencies
  pip:
    name:
      - scapy
      - pcapy-ng
    virtualenv: "{{ opencanary_install_dir }}"
    virtualenv_command: "/usr/bin/python3 -m venv"
  when: snmp_enabled == "true"

- name: Create /etc/opencanary
  file:
    path: /etc/opencanaryd
    state: directory

- name: Install opencanaryd.service
  template:
    src: opencanaryd_service.jn2
    dest: /etc/systemd/system/opencanaryd.service

- name: Install opencanary config
  template:
    src: opencanary_conf.jn2
    dest: /etc/opencanaryd/opencanary.conf
  register: config

- block:
  - name: Get python venv version
    command: 'ls "{{ opencanary_install_dir }}/lib"'
    register: dir

  - name: HTTP/HTTPS custom skin copy
    copy:
      src: "{{ http_customskin_folder }}"
      dest: "{{ opencanary_install_dir }}/lib/{{ dir.stdout }}/site-packages/opencanary/modules/data/http/skin/"
  when: http_customskin_folder is defined

- block:
    - name: Create {{ samba_path }}
      file:
        path: "{{ samba_path }}"
        state: directory
        mode: "0777"

    - name: Configure Samba
      template:
        src: samba_conf.jn2
        dest: /etc/samba/smb.conf
      notify: Restart samba

    - name: Configure Samba Audit
      template:
        src: samba_audit.jn2
        dest: /etc/rsyslog.d/smb_audit.conf

    - name: Touch samba-audit.log
      file:
        path: /var/log/samba-audit.log
        state: touch
        owner: syslog
        group: adm
      notify: Restart rsyslogd
  when: smb_enabled == "true"

- name: Enable opencanaryd.service
  systemd:
    name: opencanaryd
    enabled: yes
    masked: no
    daemon_reload: yes
  notify: Start opencanaryd

- name: Restart opencanaryd
  command: echo restart opencanaryd
  notify: Start opencanaryd
  when: config.changed
